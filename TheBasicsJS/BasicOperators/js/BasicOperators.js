"use strict"

/* Математика */
let value1 = 10;
let value2 = 2;
console.log (`Мы имеем две переменные со значениями (аргументами, операндами) ${value1} и ${value2}. Различные математические операции с использованием операторов:
  Сложение + : ${value1+value2};
  Вычитание - : ${value1-value2};
  Умножение * : ${value1*value2};
  Деление / : ${value1/value2};
  Возведение в степень ** : ${value1**value2};
  Взятие остатка % : ${value1%value2};
  Изменение числа (с положительного на отрицательное) - : ${-value1};`);

  /* Строки */
value1 = `Супер `;
value2 = 2;
console.log (`Мы имеем две переменные со значениями (аргументами, операндами) ${value1} и ${value2}. При этом их тип ${typeof(value1)} и ${typeof(value2)} соответственно. 
Сложение + : ${value1+value2} (Тип ${typeof(value1+value2)});
Остальные арифметические операторы работают только с числами: ${value1-value2} (Тип ${typeof(value1-value2)}). Строка преобразуется в число в том случае если в строке указано число.`);

value1 = `1`;
value2 = `2`;
console.log (`Другой пример. Мы имеем две переменные со значениями (аргументами, операндами) ${value1} и ${value2}. При этом их тип ${typeof(value1)} и ${typeof(value2)} соответственно.
  Сложение + : ${value1+value2} (Тип ${typeof(value1+value2)});
  Для того чтобы преобразовать эти значение в цифровые и сложить используется унарный оператор + перед каждой переменной +value1 + +value2 (можно использовать Number ()): ${+value1 + +value2} (Тип ${typeof(+value1 + +value2)})`);

  /* Инкремент/Декремент */
value1 = 0;
console.log (`Иногда есть необходимость увеличивать или уменьшать переменную на 1. Мы имеем переменную со значением (аргументом, операндом) ${value1}.
  Инкремент ++ (префиксная форма) : ${++value1};
  Декремент -- (префиксная форма) : ${--value1};
  При чем если операторы использовать в постфиксной форме (после переменной), то возвращается старое значение.
  Инкремент (постфиксная форма) ++ : ${value1++};
  Декремент (постфиксная форма) -- : ${value1--}.`);

  /* Запятая */
  console.log (`Оператор «запятая» предоставляет нам возможность вычислять несколько выражений, разделяя их запятой ,. Каждое выражение выполняется, но возвращается результат только последнего. 
  В переменной (1 + 2 , 3 + 4) вернется: ${(1 + 2 , 3 + 4)}`);

  /* Практика № 1 */
let a = 1, b = 1;
console.log (++a, b++); 

/* Практика № 2 */
a = 2;
b = 1 + (a *= 2);
console.log (a,b);

/* Практика № 3  */
console.log ("" + 1 + 0);
console.log ("" - 1 + 0);
console.log (true + false);
console.log (6 / "3");
console.log ("2" * "3");
console.log (4 + 5 + "px");
console.log ("$" + 4 + 5);
console.log ("4" - 2);
console.log ("4px" - 2);
console.log ("   -9   " + 5);
console.log ("   -9   " - 5);
console.log (null + 1);
console.log (undefined + 1);
console.log (" \t \n" - 2);

/* Практика № 4 */

let number1 = +prompt (`Введите первое число`, 1);
let number2 = +prompt (`Введите второе число`, 2);
alert (number1 + number2);